#!/bin/sh
######################################################################################
# Copyright (C) 2009 Progress Software, Inc. All rights reserved.                    #
# http://fusesource.com                                                              #
# ---------------------------------------------------------------------------------- #
# The software in this package is published under the terms of the AGPL license      #
# a copy of which has been included with this distribution in the license.txt file.  #
######################################################################################

# =====================================================================
# User customization area.  You can set your defaults here.
# =====================================================================
JAVA_MIN_MEM=16m
JAVA_MAX_MEM=64m

# =====================================================================
# This section holds MeshKeeper environment setup routines
# =====================================================================
DIRNAME=`dirname $0`
PROGNAME=`basename $0`
warn() {
    echo "${PROGNAME}: $*"
}

die() {
    warn "$*"
    exit 1
}

maybeSource() {
    file="$1"
    if [ -f "$file" ] ; then
        . $file
    fi
}

detectOS() {
    # OS specific support (must be 'true' or 'false').
    cygwin=false;
    darwin=false;
    aix=false;
    os400=false;
    case "`uname`" in
        CYGWIN*)
            cygwin=true
            CYGPATHOPS="--path --mixed"
            ;;
        Darwin*)
            darwin=true
            ;;
        AIX*)
            aix=true
            ;;
        OS400*)
            os400=true
            ;;
    esac
    # For AIX, set an environment variable
    if $aix; then
         export LDR_CNTRL=MAXDATA=0xB0000000@DSA
         export IBM_JAVA_HEAPDUMP_TEXT=true
         echo $LDR_CNTRL
    fi
}

unlimitFD() {
    # Use the maximum available, or set MAX_FD != -1 to use that
    if [ "x$MAX_FD" = "x" ]; then
        MAX_FD="maximum"
    fi

    # Increase the maximum file descriptors if we can
    if [ "$os400" = "false" ] && [ "$cygwin" = "false" ]; then
        MAX_FD_LIMIT=`ulimit -H -n`
        if [ "$MAX_FD_LIMIT" != 'unlimited' ]; then
            if [ $? -eq 0 ]; then
                if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ]; then
                    # use the system max
                    MAX_FD="$MAX_FD_LIMIT"
                fi

                ulimit -n $MAX_FD > /dev/null
                # echo "ulimit -n" `ulimit -n`
                if [ $? -ne 0 ]; then
                    warn "Could not set maximum file descriptor limit: $MAX_FD"
                fi
            else
                warn "Could not query system maximum file descriptor limit: $MAX_FD_LIMIT"
            fi
        fi
    fi
}

locateHome() {
    if [ "x$MESHKEEPER_HOME" != "x" ]; then
        warn "Ignoring predefined value for MESHKEEPER_HOME"
    fi

    MESHKEEPER_HOME=`cd $DIRNAME/..; pwd`
    if [ ! -d "$MESHKEEPER_HOME" ]; then
        die "MESHKEEPER_HOME is not valid: $MESHKEEPER_HOME"
    fi
}

locateBase() {
    if [ "x$MESHKEEPER_BASE" != "x" ]; then
        if [ ! -d "$MESHKEEPER_BASE" ]; then
            die "MESHKEEPER_BASE is not valid: $MESHKEEPER_BASE"
        fi
    else
        MESHKEEPER_BASE=$MESHKEEPER_HOME/data
    fi
}

locateJava() {
    # Setup the Java Virtual Machine
    if $cygwin ; then
        [ -n "$JAVA" ] && JAVA=`cygpath --mixed "$JAVA"`
        [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --mixed "$JAVA_HOME"`
    fi

    if [ "x$JAVA" = "x" ]; then
        if [ "x$JAVA_HOME" = "x" ] && [ "$darwin" = "true" ]; then
            JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Home
        fi
        if [ "x$JAVA_HOME" != "x" ]; then
            if [ ! -d "$JAVA_HOME" ]; then
                die "JAVA_HOME is not valid: $JAVA_HOME"
            fi
            JAVA="$JAVA_HOME/bin/java"
        else
        	if which java 2>&1 | grep "^no java" ; then
       			die "JAVA_HOME not set and no java found in path!"
       		else
       		    warn `java -version` | echo "JAVA_HOME not set. Using java found in path: $1"
            fi
			JAVA="java"
        fi
    fi
}

detectJVM() {
   #echo "`$JAVA -version`"
   # This service should call `java -version`,
   # read stdout, and look for hints
   if $JAVA -version 2>&1 | grep "^IBM" ; then
       JVM_VENDOR="IBM"
   # on OS/400, java -version does not contain IBM explicitly
   elif $os400; then
       JVM_VENDOR="IBM"
   else
       JVM_VENDOR="SUN"
   fi
   # echo "JVM vendor is $JVM_VENDOR"
}

setupDebugOptions() {
    if [ "x$JAVA_OPTS" = "x" ]; then
        JAVA_OPTS="$DEFAULT_JAVA_OPTS"
    fi
    export JAVA_OPTS

    # Set Debug options if enabled
    if [ "x$MESHKEEPER_DEBUG" != "x" ]; then
        # Use the defaults if JAVA_DEBUG_OPTS was not set
        if [ "x$JAVA_DEBUG_OPTS" = "x" ]; then
            JAVA_DEBUG_OPTS="$DEFAULT_JAVA_DEBUG_OPTS"
        fi

        JAVA_OPTS="$JAVA_DEBUG_OPTS $JAVA_OPTS"
        warn "Enabling Java debug options: $JAVA_DEBUG_OPTS"
    fi
}

setupDefaults() {
    DEFAULT_JAVA_OPTS="-Xms$JAVA_MIN_MEM -Xmx$JAVA_MAX_MEM "

    #Set the JVM_VENDOR specific JVM flags
    if [ "$JVM_VENDOR" = "SUN" ]; then
        DEFAULT_JAVA_OPTS="-server $DEFAULT_JAVA_OPTS"
    elif [ "$JVM_VENDOR" = "IBM" ]; then
        if $os400; then
            DEFAULT_JAVA_OPTS="$DEFAULT_JAVA_OPTS"
        elif $aix; then
            DEFAULT_JAVA_OPTS="-Xverify:none -Xlp $DEFAULT_JAVA_OPTS"
        else
            DEFAULT_JAVA_OPTS="-Xverify:none $DEFAULT_JAVA_OPTS"
        fi
    fi

    # Setup the classpath..
    CLASSPATH="$MESHKEEPER_HOME/repository/org/fusesource/meshkeeper/meshkeeper-api/${project.version}/meshkeeper-api-${project.version}.jar"
    CLASSPATH="$CLASSPATH:$MESHKEEPER_HOME/repository/commons-logging/commons-logging/${commons-logging-version}/commons-logging-${commons-logging-version}.jar"
    CLASSPATH="$CLASSPATH:$MESHKEEPER_HOME/repository/log4j/log4j/${log4j-version}/log4j-${log4j-version}.jar"
  	if $cygwin; then
  	    CLASSPATH=`cygpath $CYGPATHOPS "$CLASSPATH"`
  	fi

    DEFAULT_JAVA_DEBUG_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"

    ##
    ## TODO: Move to conf/profiler/yourkit.{sh|cmd}
    ##
    # Uncomment to enable YourKit profiling
    #DEFAULT_JAVA_DEBUG_OPTS="-Xrunyjpagent"
	
  	LOG4J="$MESHKEEPER_HOME/etc/log4j.properties"
  	if $cygwin; then
  	    LOG4J=`cygpath $CYGPATHOPS "$LOG4J"`
  	fi


    if $cygwin; then
        MESHKEEPER_HOME=`cygpath  $CYGPATHOPS "$MESHKEEPER_HOME"`
        MESHKEEPER_BASE=`cygpath  $CYGPATHOPS "$MESHKEEPER_BASE"`
    fi
    
    OPTS=""
    OPTS="$OPTS -Dmeshkeeper.application=$0"
    OPTS="$OPTS -Dmeshkeeper.home=$MESHKEEPER_HOME"
    OPTS="$OPTS -Dmeshkeeper.base=$MESHKEEPER_BASE"
    OPTS="$OPTS -Dlog4j.configuration=file:$LOG4J"
    OPTS="$OPTS -Dmop.base=$MESHKEEPER_HOME"
    OPTS="$OPTS -Dmop.online=false"
    OPTS="$OPTS $MESHKEEPER_OPTS"
}

setenv() {
  
    #
    # Check/Set up some easily accessible MIN/MAX params for JVM mem usage
    #

    if [ "x$JAVA_MIN_MEM" = "x" ]; then
        JAVA_MIN_MEM=16M
        export JAVA_MIN_MEM
    fi

    if [ "x$JAVA_MAX_MEM" = "x" ]; then
        JAVA_MAX_MEM=256M
        export JAVA_MAX_MEM
    fi
    
    # Determine if there is special OS handling we must perform
    detectOS

    # Unlimit the number of file descriptors if possible
    unlimitFD

    # Locate the home directory
    locateHome

    # Locate the base directory
    locateBase

    # Locate the Java VM to execute
    locateJava

    # Determine the JVM vendor
    detectJVM

    # Setup default options
    setupDefaults

    # Install debug options
    setupDebugOptions
}

# =====================================================================
# Execute the Control Server
# =====================================================================
setenv $@
exec $JAVA $JAVA_OPTS $OPTS -classpath "$CLASSPATH" org.fusesource.meshkeeper.control.Main $*
